stages:
  - unit_test
  - lambda-package
  - validate
  - plan
  - apply

image: python:3.8

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  
before_script:
  - python -V
  - apt-get update -y
  - apt-get install unzip wget -y
  - wget https://releases.hashicorp.com/terraform/1.8.1/terraform_1.8.1_linux_amd64.zip
  - unzip terraform_1.8.1_linux_amd64.zip
  - mv terraform /usr/local/bin/
  - terraform --version
  - pip install awscli boto3
  - aws --version
  - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID} 
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}   
  - export AWS_DEFAULT_REGION=${AWS_REGION}  
  - rm -rf .terraform
  - terraform --version
  - cd terraform_folder
  - terraform init

unit_test:
  stage: unit_test
  script:
    - cd ../lambda_functions
    - python -m unittest discover
    - cd ..


lambda-package:
  stage: lambda-package
  script:
    - rm -rf product-lambda-get.zip product-lambda-upload.zip
    - terraform apply --target="data.archive_file.product-lambda-get" --target="data.archive_file.product-lambda-upload"

validate:
  stage: validate
  script:
    - terraform validate
plan:
  stage: plan
  script:
    - ls -lisa
    - terraform plan -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - terraform_folder/planfile
      - terraform_folder/product-lambda-get.zip
      - terraform_folder/product-lambda-upload.zip
apply:
  stage: apply
  script:
    - terraform apply "planfile"
  dependencies:
    - plan
  when: on_success



